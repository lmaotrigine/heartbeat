on:
  push:
    tags:
      - '*'

defaults:
  run:
    shell: bash

jobs:
  release:
    strategy:
      matrix:
        target:
          - aarch64-apple-darwin
          - aarch64-unknown-linux-musl
          - arm-unknown-linux-musleabihf
          - armv7-unknown-linux-musleabihf
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
          - x86_64-unknown-linux-musl
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
            target-rustflags: ''
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            target-rustflags: '-C linker=lld'
          - target: arm-unknown-linux-musleabihf
            os: ubuntu-latest
            target-rustflags: '-C linker=lld'
          - target: armv7-unknown-linux-musleabihf
            os: ubuntu-latest
            target-rustflags: '-C linker=lld'
          - target: x86_64-apple-darwin
            os: macos-latest
            target-rustflags: ''
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            target-rustflags: ''
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            target-rustflags: '-C linker=lld'
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1  # we don't build pre-releases anyway
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
      - name: setup stable rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - name: install llvm toolchains
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y clang llvm
      - name: setup ripgrep
        uses: lmaotrigine/fetch-crate-action@mistress
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          owner: BurntSushi
          name: ripgrep
          bin: rg
      - name: ref type
        id: ref-type
        run: ./bin/ref-type ${{ github.ref }} >> "$GITHUB_OUTPUT"
      - name: package
        id: package
        env:
          TARGET: ${{ matrix.target }}
          REF: ${{ github.ref }}
          OS: ${{ matrix.os }}
          TARGET_RUSTFLAGS: ${{ matrix.target-rustflags }}
        run: ./bin/package
        shell: bash
      - name: publish archive
        uses: softprops/action-gh-release@v1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          draft: true
          files: ${{ steps.package.outputs.archive }}
          prerelease: ${{ steps.ref-type.outputs.value != 'release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        